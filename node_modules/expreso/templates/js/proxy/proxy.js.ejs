const requestProxy = require('express-request-proxy')
const setProxyUrl = (req, res, next) => {
  const { url } = req.query
  if (!url) {
    return res.status(400).send('Send url query')
  }
  req.proxyUrl = url
  next()
}
const router = require('express').Router()
  .get('/express-request-proxy', setProxyUrl, (req, res, next) => {
    // https://github.com/dvonlehman/express-request-proxy#options
    const proxy = requestProxy({
      url: req.proxyUrl,
      query: {
        // access_token: req.user.accessToken,
        secret_key: process.env.SOMEAPI_SECRET_KEY
      },
      headers: {
        Authorization: 'Basic ' + Buffer.from('usernamePassword').toString('base64'),
        'X-Custom-Header': process.env.SOMEAPI_CUSTOM_HEADER
      }
      // cache: redis.createClient(),
      // cacheMaxAge: 60 // 1min,
      //  transforms: [require('markdown-transform')]
    })
    proxy(req, res, next)
  })
  .get('/request-pipe', setProxyUrl, (req, res, next) => {
    require('stream').pipeline(
      require('http').request(req.proxyUrl),
      res,
      next
    )
  })

if (require.main === module) {
  // http-proxy
  require('http-proxy').createProxyServer({
    target: process.env.PROXY_TO || 'http://localhost:8080',
    autoRewrite: true,
    followRedirects: true,
    changeOrigin: true
  }).listen(2224)
}

module.exports = router

/* $meta */
module.exports.meta = {
  depds: [
    'express-request-proxy',
    'proxy'
  ]
}
/* $-end-meta */
