const multer = require('multer')
const { join, extname } = require('path')
const fs = require('fs')

// curl -X POST -F 'image=@picture.jpg' http://domain.tld/upload
const uploadsPath = join(__dirname, '/uploads')

if (!fs.existsSync(uploadsPath)) {
  fs.mkdirSync(uploadsPath)
}
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, uploadsPath)
  },
  filename: function (req, file, cb) {
    cb(null, `${file.fieldname}-${Date.now()}${extname(file.originalname)}`)
  }
})
const upload = multer({
  dest: uploadsPath,
  storage
})

const footer = () => `
<footer>
<a href="./upload">upload</a>
<a href=".">files</a>
<a href="./ftp">ftp</a>
</footer>
`
const multForm = () => (`
  <form method="post" action="" enctype="multipart/form-data">
    <label>Avatar:</label><br>
    <input type="file" name="avatar" placeholder="select avatar" /><br>
    <label>Photos:</label><br>
    <input type="file" name="gallery" placeholder="select gallery" multiple /><br>
    <hr/>
    <input type="submit" value="Upload" />
  </form>
`)

const liFile = (d) => (`<li>${d} 
      <a href="./ftp/${d}?type=download">dwl</a> | 
      <a href="./ftp/${d}?type=sendFile">send</a> |
      <a href="./ftp/${d}?type=attachment">attach</a>
      </li>`)

const list = (data, rndr) => (`
<ol>
  ${data.map(d => rndr(d)).join('\n')}
</ol>
`)

const express = require('express')
module.exports = express.Router()
  .use(express.json())
  .get('/upload', (req, res) => {
    res.type('html').send(multForm() + footer())
  })
  .post('/upload', upload.any(), (req, res) => {
    res.json({ file: req.file, files: req.files })
  })
  .get('/', (req, res, next) => {
    fs.readdir(uploadsPath, (err, files) => {
      if (err) {
        console.log(req.path)
        return res.redirect(req.baseUrl + '/upload')
      }
      const html = `${list(files, liFile)} ${footer()}`
      res.send(html)
    })
  })
  .get('/ftp/:file', (req, res) => {
    const filePath = join(uploadsPath, req.params.file)
    const chain = res[req.query.type](filePath)
    if (chain) chain.end()
  })
  .use('/ftp', express.static(uploadsPath), require('serve-index')(uploadsPath, { icons: true }))
  .post('/formid', (req, res) => {
    const form = new (require('formidable')).IncomingForm({
      multiples: true,
      uploadDir: './uploads'
    })
    form.parse(req, (err, fields, files) => {
      if (err) return err
      res.json({ fields, files })
    })
  })
